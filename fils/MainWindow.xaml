<Window x:Class="RadioArchive.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RadioArchive" 
        d:DataContext="{d:DesignInstance Type=local:WindowViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" 
        AllowsTransparency="True"
        x:Name="WindowApp"
        WindowStyle="None"
        MinWidth="{Binding WindowMinimumWidth}"
        MinHeight="{Binding WindowMinimumHeight}"
        Height="600" Width="900">
    <Window.Resources>
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <!-- Outer border with drop shadow margin -->
                        <Border Padding="{Binding OuterMarginSize, FallbackValue=0}" 
                                BorderBrush="{StaticResource ForeGroundDarkBrush}" 
                                BorderThickness="{Binding FlatBorderThickness}">

                            <!-- Main window outline -->
                            <Grid>
                                <!-- Outer dragging border -->
                                <Border BorderThickness="{Binding BeingMoved, Converter={local:BooleanToBorderThicknessConverter}}"
                                        Panel.ZIndex="2"
                                        CornerRadius="{Binding WindowCornerRadius, FallbackValue=10}"
                                        BorderBrush="{StaticResource WordBlueBrush}"/>

                                <!-- Opacity mask for corner grid -->
                                <Border x:Name="Contanir" Background="{StaticResource BackGroundLightBrush}" 
                                        CornerRadius="{Binding WindowCornerRadius, 
                                        FallbackValue=10}"/>

                                <!-- Main window with resizable outline margin -->
                                <Border CornerRadius="{Binding WindowCornerRadius, 
                                        FallbackValue=10}">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="{StaticResource BackgroundDark}" Offset="0.0"/>
                                            <GradientStop Color="{StaticResource BackgroundLight}" Offset="2"/>
                                        </LinearGradientBrush>
                                    </Border.Background>


                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="1" Opacity="0.3"/>
                                    </Border.Effect>
                                </Border>

                                <!--the main window content-->
                                <Grid>
                                    <!--the main window clipping-->
                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=Contanir}"/>
                                    </Grid.OpacityMask>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{Binding TitleHeightGridLength, FallbackValue=32}"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- Title bar -->
                                    <Grid Grid.Row="0" Panel.ZIndex="1">
                                        <!-- Window Button -->
                                        <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">


                                            <!-- Minimize Button-->
                                            <Button Foreground="{StaticResource ForeGroundMainBrush}"
                                                    Command="{Binding MinimizeCommand}"
                                                    Style="{StaticResource WindowControlButton}"
                                                    WindowChrome.IsHitTestVisibleInChrome="True"
                                                    Content="{StaticResource FontAweosomeWindowMinimizeIcon}"/>

                                            <!-- Restore Button-->
                                            <Button Visibility="{Binding WindowMaximized, Converter={local:BooleanToVisibilityGoneConverter}}"
                                                    Foreground="{StaticResource ForeGroundMainBrush}"
                                                    Command="{Binding MaximizeCommand}"
                                                    FontSize="{StaticResource FontSizeHuge}"
                                                    Style="{StaticResource WindowControlButton}"
                                                    WindowChrome.IsHitTestVisibleInChrome="True"
                                                    Content="{StaticResource FontAweosomeWindowRestoreIcon}"/>

                                            <!-- Maximize Button-->
                                            <Button Visibility="{Binding WindowMaximized, Converter={local:BooleanToVisibilityGoneConverter}, ConverterParameter=True}"
                                                    Foreground="{StaticResource ForeGroundMainBrush}"
                                                    Command="{Binding MaximizeCommand}"
                                                    Style="{StaticResource WindowControlButton}"
                                                    WindowChrome.IsHitTestVisibleInChrome="True"
                                                    Content="{StaticResource FontAweosomeWindowMaximizeIcon}"/>

                                            <!-- Close Button-->
                                            <Button Command="{Binding CloseCommand}"
                                                    Style="{StaticResource WindowCloseButton}"
                                                    FontSize="{StaticResource FontSizeHuge}"
                                                    Content="{StaticResource FontAweosomeCloseIcon}"/>
                                        </StackPanel>
                                    </Grid>

                                    <!-- Page content -->
                                    <Border Grid.RowSpan="2" 
                                            ClipToBounds="True">
                                        <ContentPresenter Content="{TemplateBinding Content}"/>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="{Binding  ResizeBorderThickness}" 
                      CaptionHeight="{Binding TitleHeight}"
                      GlassFrameThickness="0"
                      CornerRadius="0">
        </WindowChrome>
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!-- Side Menu -->
        <local:SideMenuControl  DataContext="{Binding ApplicationViewModel, 
                                Source={x:Static local:ViewModelLocator.Instance}}"
                                local:AnimateSlideInFromLeftProperty.Value="{Binding SideMenuVisible}"
                                Grid.Column="0"
                                Grid.RowSpan="2"/>

        <!-- Page Content -->
        <local:PageHost Grid.Column="1" 
                        Margin="0,32,0,0"
                        CurrentPage="{Binding ApplicationViewModel.CurrentPage, 
                                        Source={x:Static local:ViewModelLocator.Instance}}"                         
                         CurrentPageViewModel="{Binding ApplicationViewModel.CurrentPageViewModel, 
                                        Source={x:Static local:ViewModelLocator.Instance}}"/>

        <!--Pop-up Overlay-->
        <!--<Border 
                Background="Transparent"
                DataContext="{Binding PodcastPlayerViewModel,
                        Source={x:Static local:ViewModelLocator.Instance}}"
                Visibility="{Binding VolumeControlVisible, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}"
                Grid.Row="0"
                Grid.Column="1"
                Panel.ZIndex="1">

            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding ToggleVolumeControlCommand}"/>
            </Border.InputBindings>
        </Border>-->

        <!-- Speed ratio menu -->
        <Border Panel.ZIndex="2"
                Grid.Row="0"
                Grid.Column="1"
                DataContext="{Binding PodcastPlayerViewModel,
                        Source={x:Static local:ViewModelLocator.Instance}}"
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Right"                 
                local:AnimateFadeInProperty.Value="{Binding SpeedRatioMenuVisible}">

            <local:VerticalMenuControl 
                Margin="0,0,40,20"
                Opacity="0.9"
                DataContext="{Binding  SpeedRatioMenu}"/>
        </Border>

        <!-- Media Control -->
        <local:PodcastPlayerControl Grid.Column="1"
                                    Grid.Row="1"
                                    DataContext="{Binding PodcastPlayerViewModel, 
                                    Source={x:Static local:ViewModelLocator.Instance}}"/>

    </Grid>
</Window>
